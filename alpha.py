import telebot
from telebot import types
import json
import sqlite3
from database_2 import init_db, get_random_recipe, get_all_recipes_by_category, format_recipe, load_recipes_from_json, fetch_recipes, delete_recipe_by_id, get_all_categories



# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –≤–∞—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
bot = telebot.TeleBot('7691968898:AAF3hAmA_6nwBRr3DP-8Mt8HUMEmj0kjQPc')

# –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
ADMIN_IDS = [1395854084, 815125048]  # –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤—Å–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
init_db()  # –í—ã–∑–æ–≤–∏—Ç–µ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
load_recipes_from_json('recipes.json')


@bot.message_handler(commands=['start'])
def send_welcome(message):
    log_user_message(message)  # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('ü•§ –†–µ—Ü–µ–ø—Ç—ã')
    btn3 = types.KeyboardButton('üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if message.from_user.id in ADMIN_IDS:
        btn4 = types.KeyboardButton('üë®‚Äç‚öñÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å')
        markup.add(btn1, btn3, btn4)
    else:
        markup.add(btn1, btn3)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LAsmuzi! üåü\n\n\n"
                     "–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç!\n\n"
                     "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –ø–æ–∫—É–ø–∫—É –Ω–∞—à–µ–≥–æ –º–∏–Ω–∏ –±–ª–µ–Ω–¥–µ—Ä–∞ –¥–ª—è —Å–º—É–∑–∏! –ú—ã —Ä–∞–¥—ã, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç —Å—Ç–∞–ª –≤–∞—à–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∫—É—Å–Ω—ã—Ö –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤. –ò –º—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∞–º!\n\n"
                     "–í–∞—à–µ –º–Ω–µ–Ω–∏–µ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å, –ø–æ—ç—Ç–æ–º—É –º—ã –±—É–¥–µ–º –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω—ã, –µ—Å–ª–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –æ—Ç–∑—ã–≤–æ–º –æ –Ω–∞—à–µ–º –±–ª–µ–Ω–¥–µ—Ä–µ. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —É–ª—É—á—à–∞—Ç—å –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é –∏ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è—Ö.\n\n"
                     "–í –∫–∞—á–µ—Å—Ç–≤–µ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –±–æ–Ω—É—Å–∞ –º—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –ø–æ–¥–±–æ—Ä–∫—É –ª—É—á—à–∏—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –¥–ª—è —Å–º—É–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –∑–∞—Ä—è–¥–∏—Ç—å –≤–∞—Å —ç–Ω–µ—Ä–≥–∏–µ–π –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å. \n\n"
                     "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º!\n\n"
                     "–° —É–≤–∞–∂–µ–Ω–∏–µ–º, LAsmuzi",
                     reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'ü•§ –†–µ—Ü–µ–ø—Ç—ã')
def show_recipes_menu(message):
    log_user_message(message)  # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('–°–º—É–∑–∏', callback_data='smoothies')
    btn2 = types.InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç', callback_data='random_recipe')
    markup.add(btn1, btn2)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–µ—Ü–µ–ø—Ç–æ–≤:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data in ['smoothies', 'random_recipe'])
def callback_handler(call):
    log_user_message(call.message)  # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if call.data == 'smoothies':
        recipes = get_all_recipes_by_category('smoothies')  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "smoothies"
        if recipes:
            message_text = format_recipes_list(recipes)  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤
            markup = create_recipe_buttons(recipes)  # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤
            bot.edit_message_text(chat_id=call.message.chat.id,
                                  message_id=call.message.message_id,
                                  text=message_text,
                                  reply_markup=markup)
        else:
            bot.edit_message_text(chat_id=call.message.chat.id,
                                  message_id=call.message.message_id,
                                  text="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç—ã –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")
    elif call.data == 'random_recipe':
        random_recipe = get_random_recipe('smoothies')  # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "smoothies"
        if random_recipe:
            formatted_recipe = format_recipe(random_recipe)
            bot.send_message(call.message.chat.id, formatted_recipe)
        else:
            bot.edit_message_text(chat_id=call.message.chat.id,
                                  message_id=call.message.message_id,
                                  text="–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")

@bot.callback_query_handler(func=lambda call: call.data.isdigit())
def handle_recipe_selection(call):
    try:
        recipe_id = int(call.data)  # –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        recipe = get_recipe_by_id(recipe_id)
        if recipe:
            bot.send_message(call.message.chat.id, format_recipe(recipe))
        else:
            bot.edit_message_text(chat_id=call.message.chat.id,
                                  message_id=call.message.message_id,
                                  text="–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except ValueError:
        bot.edit_message_text(chat_id=call.message.chat.id,
                              message_id=call.message.message_id,
                              text="–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")

def get_recipe_by_id(recipe_id):
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ü–µ–ø—Ç –ø–æ ID
    recipe = fetch_recipes("SELECT * FROM recipes WHERE id = ?", (recipe_id,))
    return recipe[0] if recipe else None

def log_user_message(message):
    """–õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–æ–Ω—Å–æ–ª—å."""
    user_id = message.from_user.id
    username = message.from_user.username or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    user_message = message.text
    print(f"ID: {user_id}, –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}, –°–æ–æ–±—â–µ–Ω–∏–µ: {user_message}")

def format_recipes_list(recipes):
    result = "üìã –í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤:\n\n"
    for recipe in recipes:
        result += f"ü•§ {recipe[1]}\n"  # recipe[1] - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞
    result += "\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏."
    return result

def create_recipe_buttons(recipes):
    markup = types.InlineKeyboardMarkup()
    for recipe in recipes:
        btn = types.InlineKeyboardButton(recipe[1], callback_data=str(recipe[0]))  # recipe[1] - –Ω–∞–∑–≤–∞–Ω–∏–µ, recipe[0] - ID
        markup.add(btn)
    return markup

def format_recipe(recipe):
    result = f"ü•§ {recipe[1]}\n\n"  # recipe[1] - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞
    ingredients = json.loads(recipe[3])  # recipe[3] - –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    result += "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:\n"
    for ing in ingredients:
        result += f"‚Ä¢ {ing['item']}: {ing['amount']}\n"

    nutrition = json.loads(recipe[4])  # recipe[4] - –º–∞–∫—Ä–æ—ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    result += f"\n–ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:\n"
    result += f"–ë–µ–ª–∫–∏: {nutrition['protein']}\n"
    result += f"–ñ–∏—Ä—ã: {nutrition['fats']}\n"
    result += f"–£–≥–ª–µ–≤–æ–¥—ã: {nutrition['carbs']}\n"
    result += f"–ö–∞–ª–æ—Ä–∏–∏: {recipe[5]} –∫–∫–∞–ª"
    return result

@bot.message_handler(func=lambda message: message.text == 'üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
def support(message):
    log_user_message(message)  # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(message.chat.id,
                     "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @Assalout72")

@bot.message_handler(func=lambda message: message.text == 'üë®‚Äç‚öñÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å')
def admin_panel(message):
    log_user_message(message)  # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if message.from_user.id in ADMIN_IDS:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        admin_text = """
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å! üåü

–í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
1. /add_recipe - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç
2. /view_recipes - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã
3. /delete_recipe - –£–¥–∞–ª–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –ø–æ ID

–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.
        """
        bot.send_message(message.chat.id, admin_text)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏

@bot.message_handler(commands=['view_recipes'])
def view_recipes(message):
    if message.from_user.id in ADMIN_IDS:
        recipes = fetch_recipes("SELECT * FROM recipes")
        if recipes:
            recipe_list = "üìã –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã:\n\n"
            for recipe in recipes:
                recipe_list += f"ID: {recipe[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {recipe[1]}\n"
            bot.send_message(message.chat.id, recipe_list)
        else:
            bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤.")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

@bot.message_handler(commands=['delete_recipe'])
def delete_recipe(message):
    if message.from_user.id in ADMIN_IDS:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID —Ä–µ—Ü–µ–ø—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
        bot.register_next_step_handler(message, process_delete_recipe)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

def process_delete_recipe(message):
    try:
        recipe_id = int(message.text)  # –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Ü–µ–ø—Ç–∞
        if delete_recipe_by_id(recipe_id):  # –£–¥–∞–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç –ø–æ ID
            bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å ID {recipe_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
        else:
            bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å ID {recipe_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ ID –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def delete_recipe_by_id(recipe_id):
    try:
        conn = sqlite3.connect('recipes.db')
        cursor = conn.cursor()

        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ ID
        cursor.execute("DELETE FROM recipes WHERE id = ?", (recipe_id,))
        conn.commit()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª –ª–∏ —É–¥–∞–ª–µ–Ω —Ä–µ—Ü–µ–ø—Ç
        if cursor.rowcount > 0:
            conn.close()
            return True
        else:
            conn.close()
            return False
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False


@bot.message_handler(commands=['add_recipe'])
def add_recipe(message):
    if message.from_user.id in ADMIN_IDS:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞.")
        bot.register_next_step_handler(message, get_recipe_name)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

def get_recipe_name(message):
    recipe_name = message.text
    show_category_selection(message)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    bot.register_next_step_handler(message, get_recipe_category, recipe_name)

def get_recipe_category(message, recipe_name):
    category = message.text.lower()  # –°—á–∏—Ç—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    if category in [cat.lower() for cat in get_all_categories()]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é).")
        bot.register_next_step_handler(message, get_recipe_ingredients, recipe_name, category)
    else:
        bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.")
        show_category_selection(message)  # –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä

def show_category_selection(message):
    categories = get_all_categories()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if categories:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        for category in categories:
            btn = types.KeyboardButton(category.capitalize())
            markup.add(btn)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def get_recipe_category(message, recipe_name):
    category = message.text.lower()  # –°—á–∏—Ç—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    if category in [cat.lower() for cat in get_all_categories()]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é).")
        bot.register_next_step_handler(message, get_recipe_ingredients, recipe_name, category)
    else:
        bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.")
        show_category_selection(message)  # –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä

def get_recipe_ingredients(message, recipe_name, category):
    ingredients_text = message.text
    ingredients_list = ingredients_text.split(",")  # –†–∞–∑–¥–µ–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –ø–æ –∑–∞–ø—è—Ç–æ–π
    ingredients = [{"item": ing.strip(), "amount": "–ù–µ —É–∫–∞–∑–∞–Ω–æ"} for ing in ingredients_list]  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤

    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∏—â–µ–≤—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å (–±–µ–ª–∫–∏, –∂–∏—Ä—ã, —É–≥–ª–µ–≤–æ–¥—ã, –∫–∞–ª–æ—Ä–∏–∏).")
    bot.register_next_step_handler(message, get_nutrition, recipe_name, category, ingredients)

def get_nutrition(message, recipe_name, category, ingredients):
    nutrition_text = message.text
    try:
        protein, fats, carbs, calories = map(int, nutrition_text.split())  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —á–∏—Å–ª–∞
        nutrition = {
            "protein": protein,
            "fats": fats,
            "carbs": carbs,
            "calories": calories
        }

        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞.")
        bot.register_next_step_handler(message, save_recipe, recipe_name, category, ingredients, nutrition)

    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 5 20 150). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        bot.register_next_step_handler(message, get_nutrition, recipe_name, category, ingredients)

def save_recipe(message, recipe_name, category, ingredients, nutrition):
    description = message.text

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('recipes.db')
    cursor = conn.cursor()

    ingredients_json = json.dumps(ingredients)
    nutrition_json = json.dumps(nutrition)

    cursor.execute("""
    INSERT INTO recipes (name, category, ingredients, nutrition, description)
    VALUES (?, ?, ?, ?, ?)
    """, (recipe_name, category, ingredients_json, nutrition_json, description))

    conn.commit()
    conn.close()

    bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç '{recipe_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")

@bot.message_handler(func=lambda message: message.text == 'üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
def support(message):
    log_user_message(message)  # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(message.chat.id,
                     "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @Assalout72")

@bot.message_handler(func=lambda message: message.text == 'üë®‚Äç‚öñÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å')
def admin_panel(message):
    log_user_message(message)  # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if message.from_user.id in ADMIN_IDS:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        admin_text = """
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å! üåü

–í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
1. /add_recipe - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç
2. /view_recipes - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã
3. /delete_recipe - –£–¥–∞–ª–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –ø–æ ID
4. /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.
        """
        bot.send_message(message.chat.id, admin_text)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏

@bot.message_handler(commands=['view_recipes'])
def view_recipes(message):
    if message.from_user.id in ADMIN_IDS:
        recipes = fetch_recipes("SELECT * FROM recipes")
        if recipes:
            recipe_list = "üìã –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã:\n\n"
            for recipe in recipes:
                recipe_list += f"ID: {recipe[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {recipe[1]}\n"
            bot.send_message(message.chat.id, recipe_list)
        else:
            bot.send_message(message.chat.id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤.")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

@bot.message_handler(commands=['delete_recipe'])
def delete_recipe(message):
    if message.from_user.id in ADMIN_IDS:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID —Ä–µ—Ü–µ–ø—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
        bot.register_next_step_handler(message, process_delete_recipe)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

def process_delete_recipe(message):
    try:
        recipe_id = int(message.text)  # –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Ü–µ–ø—Ç–∞
        if delete_recipe_by_id(recipe_id):  # –£–¥–∞–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç –ø–æ ID
            bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å ID {recipe_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
        else:
            bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç —Å ID {recipe_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ ID –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def delete_recipe_by_id(recipe_id):
    try:
        conn = sqlite3.connect('recipes.db')
        cursor = conn.cursor()

        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ ID
        cursor.execute("DELETE FROM recipes WHERE id = ?", (recipe_id,))
        conn.commit()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª –ª–∏ —É–¥–∞–ª–µ–Ω —Ä–µ—Ü–µ–ø—Ç
        if cursor.rowcount > 0:
            conn.close()
            return True
        else:
            conn.close()
            return False
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False


@bot.message_handler(commands=['add_recipe'])
def add_recipe(message):
    if message.from_user.id in ADMIN_IDS:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞.")
        bot.register_next_step_handler(message, get_recipe_name)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

def get_recipe_name(message):
    recipe_name = message.text
    show_category_selection(message)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    bot.register_next_step_handler(message, get_recipe_category, recipe_name)

# –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ—Ü–µ–ø—Ç—É—Ä–∞–º–∏ –∏ –∏—Ö –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º...

bot.polling(none_stop=True)

